{
  "basic_input": {
    "Button": {
      "short_desc": "A control that responds to user input and raises a Click event.",
      "long_desc": "The Button control provides a Click event to respond to user input from a touch, mouse, keyboard, stylus, or other input device. You can put different kinds of content in a button, such as text or an image, or you can restyle a button to give it a new look.",

      "samples": {
        "text_content": {
          "title": "A simple Button with text content.",
          "checkbox": "Disable button",
          "content": "Standard React button"
        },
        "large_content": {
          "title": "Wrapping Buttons with large content.",
          "content": "This is some text that is too long and will get cut off"
        },
        "accent_styled": {
          "title": "Accent style applied to Button.",
          "content": "Accent style button"
        }
      },

      "related": [
        "ToggleButton",
        "RepeatButton",
        "HyperlinkButton"
      ]
    },
    "DropDownButton": {
      "short_desc": "A button that displays a flyout of choices when clicked.",
      "long_desc": "A control that drops down a flyout of choices from which one can be chosen.",

      "samples": {
        "simple": {
          "title": "Simple DropDownButton.",

          "label": "Email",
          "elements": [
            "Send",
            "Reply",
            "Reply All"
          ]
        },
        "withIcons": {
          "title": "DropDownButton with icons.",

          "labelIcon": "Mail",
          "elements": [
            { "icon": "SendFill", "label": "Send" },
            { "icon": "MailReply", "label": "Reply" },
            { "icon": "MailReplyAll", "label": "Reply All" }
          ]
        }
      },

      "related": [
        "SplitButton",
        "ToggleSplitButton",
        "ToggleButton",
        "RepeatButton",
        "HyperlinkButton"
      ]
    },
    "HyperlinkButton": {
      "short_desc": "A button that appears as hyperlink text, and can navigate to a URI or handle a Click event.",
      "long_desc": "A HyperlinkButton appears as a text hyperlink. When a user clicks it, it opens the page you specify in the child <Link> component from react-router-dom or <a> from HTML.",

      "samples": {
        "uri": {
          "title": "A hyperlink button that navigates to a URI",
          "checkbox": "Disable hyperlink button",
          "content": "WinUI React home page"
        }
      },

      "related": [
        "Button",
        "ToggleButton",
        "RepeatButton"
      ]
    },
    "ToggleButton": {
      "short_desc": "A button that can be switched between two states like a CheckBox.",
      "long_desc": "A ToggleButton looks like a Button, but works like a CheckBox. It typically has two states, checked (on) or unchecked (off). You can determine it's state by checking the value or defaultValue property.",

      "samples": {
        "simple": {
          "title": "A simple ToggleButton with text content.",
          "checkbox": "Disable ToggleButton",
          "content": "ToggleButton"
        }
      },

      "related": [
        "Button",
        "ToggleSwitch",
        "CheckBox"
      ]
    },
    "SplitButton": {
      "short_desc": "A two-part button that displays a flyout when its secondary part is clicked.",
      "long_desc": "The SplitButton is a dropdown button, but with an addition execution hit target.",

      "samples": {
        "with_text": {
          "title": "A SplitButton with text",
          "content": "Choose color"
        }
      },

      "related": [
        "Button",
        "ToggleSwitch",
        "CheckBox"
      ]
    },
    "ToggleSplitButton": {
      "short_desc": "A version of the SplitButton where the activation target toggles on/off.",
      "long_desc": "A version of the SplitButton where the activation target toggles on/off.",

      "samples": {
        "number_box": {
          "title": "Using ToggleSplitButton to control type of TextBox.",
          "content": "Type here...",
          "items": [
            "RedEye",
            "Lock"
          ]
        }
      },
      "related": [
        "Button",
        "ToggleSwitch",
        "CheckBox"
      ]
    },
    "CheckBox": {
      "short_desc": "A control that a user can select or clear.",
      "long_desc": "CheckBox controls let the user select a combination of binary options. In contrast, RadioButton controls allow the user to select from mutually exclusive options. The indeterminate state is used to indicate that an option is set for some, but not all, child options. Don't allow users to set an indeterminate state directly to indicate a third option.",

      "samples": {
        "two_state": {
          "title": "A 2-state CheckBox.",
          "content": "Two-state CheckBox"
        },
        "three_state": {
          "title": "A 3-state CheckBox.",
          "content": "Three-state CheckBox"
        },

        "using_three_state": {
          "title": "Using a 3-state CheckBox",
          "top_label": "Select all",
          "sub_label": "Option {{index}}"
        }
      },

      "related": [
        "RadioButton",
        "ToggleSwitch",
        "ToggleButton"
      ]
    },
    "RadioButton": {
      "short_desc": "A control that allows a user to select a single option from a group of options.",
      "long_desc": "Use RadioButtons to let a user choose between mutually exclusive, related options. Generally contained within a RadioButtons group control.",

      "samples": {
        "default": {
          "title": "A group of RadioButton controls in a RadioButtons group.",
          "sub_title": "Options:",
          "sub_label": "Option {{index}}",
          "selected_option": "You selected Option {{index}}"
        }
      },

      "related": [
        "CheckBox",
        "RadioButtons",
        "ToggleSwitch",
        "ToggleButton"
      ]
    },
    "Slider": {
      "short_desc": "A control that lets the user select from a range of values by moving a Thumb control along a track.",
      "long_desc": "Use a Slider when you want your users to be able to set defined, contiguous values (such as volume or brightness) or a range of discrete values (such as screen resolution settings).",
      "samples": {
        "simple": {
          "title": "A simple Slider."
        },
        "custom_props": {
          "title": "A slider with range and steps specified.",
          "header": "Control header"
        }
      },
      "related": []
    },
    "ToggleSwitch": {
      "short_desc": "A switch that can be toggled between 2 states.",
      "long_desc": "Use ToggleSwitch controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate commit. A toggle switch should have a single label.",
      "samples": {
        "simple": {
          "title": "A simple ToggleSwitch.",
          "checkbox": "Disable toggle switch"
        },

        "custom_props": {
          "title": "A ToggleSwitch with custom header and content",
          "content": {
            "off": "Do work",
            "on": "Working"
          },
          "header": "Toggle work"
        }
      },
      "related": [
        "ToggleButton",
        "RadioButton",
        "CheckBox"
      ]
    }
  },
  "collections": {},
  "dialogs_and_flyouts": {},
  "navigation": {},
  "status_and_info": {},
  "text": {}
}
